<?xml version="1.0" encoding="utf-8" ?>
<Suite Category="Social" RequireVersion="8.2" Title="Reddit" Id="Reddit" SourceUrl="https://github.com/nielsbosma/SeoTools-for-Excel-Connectors/blob/master/Reddit.xml" HelpUrl="http://seotoolsforexcel.com/reddit/" HelpText="Documentation">

  <Author Name="Victor" Url="http://community.seotoolsforexcel.com/users/diskborste/activity"/>

  <Resources>
    <Resource Id="Fail">
			<Fail>
				<JsonPath Expr="$.message"/>
			</Fail>
    </Resource>
  </Resources>

  <RestConnector Id="ThreadSearch" Title="Search for Threads" Group="Threads" HelpUrl="https://www.reddit.com/dev/api#GET_search">
    <Parameters>
      <Text Id="Query" Title="Query" Required="true" Debug.DefaultValue="europe"/>
      <Select Id="Sort" Title="Sort" DefaultValue="relevance">
        <DataSource>
					<Item Id="relevance" Title="Relevance"/>
					<Item Id="hot" Title="Hot"/>
					<Item Id="top" Title="Top"/>
					<Item Id="new" Title="New"/>
					<Item Id="comments" Title="Comments"/>
        </DataSource>
      </Select>
    </Parameters>
    <Paging PageSize="100" EvenPages="false">
      <Parse>
        <JsonPath Id="Cursor" Expr="data.after"/>
      </Parse>
    </Paging>
    <Fetch>
      <Fetch.Url>
        <![CDATA[
        https://www.reddit.com/search.json?q=@(Utils.UrlEncode(Model.Query))
				&limit=@(Model.PageCursor.NextTake)
        &sort=@(Model.Sort)
        @(Model.PageCursor.Page != 0 ? "&after=" + Model.Cursor : "")
        ]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
      <JsonPath Expr="data.children[*].data">
        <Compute Expr="https://www.reddit.com@(Model.Inp)" Id="Url" Title="URL" Converter="String">
					<JsonPath Expr="permalink" Id="Inp" DefaultValue=""/>
        </Compute>
        <JsonPath Expr="id" Id="Id" Title="Id" Converter="String"/>
        <JsonPath Expr="created" Id="Created" Title="Created" Converter="DateTime" Converter.SourceFormat="Unix"/>
        <JsonPath Expr="title" Id="Title" Title="Title" Converter="String"/>
        <JsonPath Expr="num_comments" Id="Comments" Title="Comments" Converter="Int"/>
        <JsonPath Expr="ups" Id="Ups" Title="Ups" Converter="Int"/>
        <JsonPath Expr="score" Id="Score" Title="Score" Converter="Int"/>
        <JsonPath Expr="num_crossposts" Id="Crossposts" Title="Crossposts" Converter="Int"/>
        <JsonPath Expr="author" Id="Author" Title="Author" Converter="String"/>
        <JsonPath Expr="subreddit_name_prefixed" Id="SubReddit" Title="SubReddit" Converter="String"/>
        <JsonPath Expr="subreddit_subscribers" Id="SubRedditSubs" Title="Subscribers" Converter="Long"/>
        <JsonPath Expr="domain" Id="Domain" Title="Domain" Converter="String"/>
      </JsonPath>
    </Parse>
		<Resource Id="Fail"/>
  </RestConnector>

  <RestConnector Id="Comments" Title="Thread Comments" Group="Comments" HelpUrl="https://www.reddit.com/dev/api#GET_comments_{article}">
    <Parameters>
      <Text Id="ThreadId" Title="Thread Id" Required="true" Debug.DefaultValue="2vnlux"/>
      <Select Id="Sort" Title="Sort" DefaultValue="top">
        <DataSource>
					<Item Id="confidence" Title="Confidence"/>
					<Item Id="top" Title="Top"/>
					<Item Id="new" Title="New"/>
					<Item Id="controversial" Title="Controversial"/>
					<Item Id="old" Title="Old"/>
					<Item Id="random" Title="Random"/>
					<Item Id="qa" Title="QA"/>
					<Item Id="live" Title="Live"/>
        </DataSource>
      </Select>
    </Parameters>
    <Fetch>
      <Fetch.Url>
        <![CDATA[
        https://www.reddit.com/comments/@(Model.ThreadId).json?sort=@(Model.Sort)
        ]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
      <JsonPath Expr="$.[1].data.children[*].data">
        <Compute Expr="https://www.reddit.com@(Model.Inp)" Id="Url" Title="URL" Converter="String">
					<JsonPath Expr="permalink" Id="Inp" DefaultValue=""/>
        </Compute>
        <JsonPath Expr="id" Id="Id" Title="Id" Converter="String"/>
        <JsonPath Expr="created" Id="Created" Title="Created" Converter="DateTime" Converter.SourceFormat="Unix"/>
        <JsonPath Expr="body" Id="Text" Title="Text" Converter="String"/>
        <JsonPath Expr="ups" Id="Ups" Title="Ups" Converter="Int"/>
        <JsonPath Expr="score" Id="Score" Title="Score" Converter="Int"/>
        <JsonPath Expr="controversiality" Id="Controversiality" Title="Controversiality" Converter="Int"/>
        <JsonPath Expr="author" Id="Author" Title="Author" Converter="String"/>
        <JsonPath Expr="parent_id" Id="ParentId" Title="Parent Id" Converter="String"/>
        <JsonPath Expr="subreddit" Id="Subreddit" Title="Subreddit" Converter="String"/>
      </JsonPath>
    </Parse>
		<Resource Id="Fail"/>
  </RestConnector>

  <RestConnector Id="CommentsLookup" Title="Lookup Comments" Group="Comments" HelpUrl="https://www.reddit.com/dev/api#GET_api_info">
    <Parameters>
      <Text Id="Ids" Title="Comment Id"  Required="true" Debug.DefaultValue="cojbps1" HelpText="Enter one or more Comment Ids separated by a new line" Multiline="true"/>
    </Parameters>
    <Fetch>
      <Fetch.Url>
        <![CDATA[
        https://www.reddit.com/api/info.json?id=@(FetchBatch("t1_"))
        ]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
      <JsonPath Expr="data.children[*].data">
        <Compute Expr="https://www.reddit.com@(Model.Inp)" Id="Url" Title="URL" Converter="String">
					<JsonPath Expr="permalink" Id="Inp" DefaultValue=""/>
        </Compute>
        <JsonPath Expr="id" Id="Id" Title="Id" Converter="String"/>
        <JsonPath Expr="created" Id="Created" Title="Created" Converter="DateTime" Converter.SourceFormat="Unix"/>
        <JsonPath Expr="body" Id="Text" Title="Text" Converter="String"/>
        <JsonPath Expr="ups" Id="Ups" Title="Ups" Converter="Int"/>
        <JsonPath Expr="score" Id="Score" Title="Score" Converter="Int"/>
        <JsonPath Expr="controversiality" Id="Controversiality" Title="Controversiality" Converter="Int"/>
        <JsonPath Expr="author" Id="Author" Title="Author" Converter="String"/>
        <JsonPath Expr="parent_id" Id="ParentId" Title="Parent Id" Converter="String"/>
        <JsonPath Expr="subreddit" Id="Subreddit" Title="Subreddit" Converter="String"/>
      </JsonPath>
    </Parse>
		<Resource Id="Fail"/>
  </RestConnector>

  <RestConnector Id="ThreadLookup" Title="Lookup Threads" Group="Threads" HelpUrl="https://www.reddit.com/dev/api#GET_api_info">
    <Parameters>
      <Text Id="Ids" Title="Thread Id" Required="true" Debug.DefaultValue="2yoeo1" HelpText="Enter one or more Comment Ids separated by a new line" Multiline="true"/>
    </Parameters>
    <Fetch>
      <Fetch.Url>
        <![CDATA[
        https://www.reddit.com/api/info.json?id=@(FetchBatch("t3_"))
        ]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
      <JsonPath Expr="data.children[*].data">
        <Compute Expr="https://www.reddit.com@(Model.Inp)" Id="Permalink" Title="Permalink" Converter="String">
					<JsonPath Expr="permalink" Id="Inp" DefaultValue=""/>
        </Compute>
        <JsonPath Expr="id" Id="Id" Title="Id" Converter="String"/>
        <JsonPath Expr="created" Id="Created" Title="Created" Converter="DateTime" Converter.SourceFormat="Unix"/>
        <JsonPath Expr="title" Id="Title" Title="Title" Converter="String"/>
        <JsonPath Expr="num_comments" Id="Comments" Title="Comments" Converter="Int"/>
        <JsonPath Expr="ups" Id="Ups" Title="Ups" Converter="Int"/>
        <JsonPath Expr="score" Id="Score" Title="Score" Converter="Int"/>
        <JsonPath Expr="author" Id="Author" Title="Author" Converter="String"/>
        <JsonPath Expr="subreddit_name_prefixed" Id="Subreddit" Title="Subreddit" Converter="String"/>
      </JsonPath>
    </Parse>
		<Resource Id="Fail"/>
  </RestConnector>

  <RestConnector Id="UserComments" Title="User Comments" Group="Comments" HelpUrl="https://www.reddit.com/dev/api#GET_user_{username}_comments">
    <Parameters>
      <Text Id="Username" Title="Username" Required="true" Debug.DefaultValue="spez"/>
      <Select Id="Sort" Title="Sort" DefaultValue="new">
        <DataSource>
					<Item Id="hot" Title="Hot"/>
					<Item Id="top" Title="Top"/>
					<Item Id="new" Title="New"/>
					<Item Id="controversial" Title="Controversial"/>
        </DataSource>
      </Select>
    </Parameters>
    <Fetch>
      <Fetch.Url>
        <![CDATA[
        https://www.reddit.com/user/@(Model.Username)/comments.json?sort=@(Model.Sort)
        ]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
      <JsonPath Expr="$.data.children[*].data">
        <Compute Expr="https://www.reddit.com@(Model.Inp)" Id="Url" Title="URL" Converter="String">
					<JsonPath Expr="permalink" Id="Inp" DefaultValue=""/>
        </Compute>
        <JsonPath Expr="id" Id="Id" Title="Id" Converter="String"/>
        <JsonPath Expr="created" Id="Created" Title="Created" Converter="DateTime" Converter.SourceFormat="Unix"/>
        <JsonPath Expr="body" Id="Text" Title="Text" Converter="String"/>
        <JsonPath Expr="ups" Id="Ups" Title="Ups" Converter="Int"/>
        <JsonPath Expr="score" Id="Score" Title="Score" Converter="Int"/>
        <JsonPath Expr="controversiality" Id="Controversiality" Title="Controversiality" Converter="Int"/>
        <JsonPath Expr="author" Id="Author" Title="Author" Converter="String"/>
        <JsonPath Expr="parent_id" Id="ParentId" Title="Parent Id" Converter="String"/>
        <JsonPath Expr="subreddit" Id="Subreddit" Title="Subreddit" Converter="String"/>
      </JsonPath>
    </Parse>
		<Resource Id="Fail"/>
  </RestConnector>

  <RazorFunctions>
    <![CDATA[
    string FetchBatch(string prefix) {
      string[] lines = ((string)Model.Ids).Trim().Split('\n').Select(e => e.Trim()).Where(e => !string.IsNullOrEmpty(e)).ToArray();
      return string.Join(",",lines.Select(e => Regex.Replace(e, prefix, "")).Select(e =>  prefix + e).ToArray());
    }
    ]]>
  </RazorFunctions>

</Suite>