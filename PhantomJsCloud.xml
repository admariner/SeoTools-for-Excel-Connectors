<?xml version="1.0" encoding="utf-8" ?>
<Suite Category="Scraping" RequireVersion="9.5.5" Title="PhantomJs Cloud" Id="PhantomJsCloud" SourceUrl="https://github.com/nielsbosma/SeoTools-for-Excel-Connectors/blob/master/PhantomJsCloud.xml" HelpUrl="http://seotoolsforexcel.com/phantomjs-cloud/" HelpText="Documentation" >

  <Author Name="Victor Sandberg" Url="http://community.seotoolsforexcel.com/users/diskborste/activity" />

  <Settings HelpText="What's this?" HelpUrl="http://seotoolsforexcel.com/phantomjs-cloud/">
    <Text Id="ApiKey" Title="API Key" Required="true" HelpUrl="http://seotoolsforexcel.com/phantomjs-cloud/" />
  </Settings>

  <Resources>
    <Resource Id="Fetch">
			<Fetch>
				<HttpSettings>
					<Cache>@Model.Cache</Cache>
				</HttpSettings>
				<Fetch.Url>
					<![CDATA[
						https://PhantomJsCloud.com/api/browser/v2/@(Model.ApiKey)/?request=@CreateRequestArr()
					]]>
				</Fetch.Url>
			</Fetch>
    </Resource>
  </Resources>

  <RestConnector Id="XPath" Title="XPath" HelpUrl="https://phantomjscloud.com/docs/http-api/index.html">
    <Parameters>
      <Text Id="Url" Title="URL" Required="false" Debug.DefaultValue="https://www.seotoolsforexcel.com"/>
      <Text Id="XPath" Title="XPath" Required="true" Debug.DefaultValue="//a"/>
      <Text Id="Attribute" Title="Attribute" Required="false"/>
      <Text Id="UserAgent" Title="Custom User-Agent" Required="false"/>
      <Checkbox Id="Cache" Title="Cache" DefaultValue="true"/>
    </Parameters>
    <Resource Id="Fetch"/>
    <Parse>
      <XPath Expr="@Model.XPath">
        <XPath Expr="." Attribute="@Model.Attribute" Converter="Auto"/>
      </XPath>
    </Parse>
  </RestConnector>

  <RestConnector Id="Regex" Title="Regex">
    <Parameters>
      <Text Id="Url" Title="URL" Required="true" Debug.DefaultValue="http://www.seotoolsforexcel.com"/>
      <Text Id="Regex" Title="Regex" Required="true" HelpUrl="https://regex101.com/"/>
      <Number Id="Group" Title="Group" Required="false" DefaultValue="0"/>
      <Text Id="UserAgent" Title="Custom User-Agent" Required="false"/>
      <Checkbox Id="Cache" Title="Cache" DefaultValue="true"/>
    </Parameters>
    <Resource Id="Fetch"/>
    <Parse>
      <Regex Expr="@Model.Regex" Group="@Model.Group">
        <Regex Expr="(.*?\n)*" Group="0" Converter="Auto" IgnoreCase="True"/>
      </Regex>
    </Parse>
  </RestConnector>

	<RestConnector Id="Headers" Title="Headers">
    <Parameters>
      <Text Id="Url" Title="URL" Required="true" Debug.DefaultValue="http://www.seotoolsforexcel.com"/>
      <Text Id="Specific" Title="Specific Header (optional)"/>
			<Text Id="UserAgent" Title="Custom User-Agent" Required="false"/>
    </Parameters>
		<Fetch>
			<Fetch.Url>
				<![CDATA[
					https://PhantomJsCloud.com/api/browser/v2/@(Model.ApiKey)/?request=@CreateRequestArr()
				]]>
			</Fetch.Url>
		</Fetch>
    <Parse>
      <Array AutoConverter="true">
				<Array.Expr>
					<![CDATA[
					@{
					  var headers = Model.FetchedResult.Headers;
						string[,] resultsAll = new string[headers.Count, 2];
						string[,] resultsSpecific = new string[1, 1];

						if(!string.IsNullOrEmpty(Model.Specific))
						{
							string value = headers[Model.Specific];
							resultsSpecific[0,0] = value != null ? value : string.Empty;
							Model.ArrayParser.Array = resultsSpecific;
						}
						else
						{
							int i = 0;
							foreach(var key in headers)
							{
									resultsAll[i,0] = key;
									resultsAll[i,1] = headers[key];
									i++;
							}
							Model.ArrayParser.Array = resultsAll;
						}
						}
					]]>
				</Array.Expr>
			</Array>
    </Parse>
  </RestConnector>

  <RazorFunctions>
    <![CDATA[
    string CreateRequestArr() {
			var dict = new Dictionary<string, object>();
			dict.Add("url", Model.Url);
			dict.Add("renderType", "html");
			if(!string.IsNullOrEmpty(Model.UserAgent))
			{
				var dictReqSettings = new Dictionary<string, object>();
				dictReqSettings.Add("userAgent", Model.UserAgent);
				dict.Add("requestSettings", dictReqSettings);
			}

			return Utils.UrlEncode(Newtonsoft.Json.JsonConvert.SerializeObject(dict));
    }
    ]]>
  </RazorFunctions>

</Suite>
