<?xml version="1.0" encoding="utf-8" ?>
<Suite Category="AI" RequireVersion="9.5.4" Title="Google Translate" Id="GoogleTranslate" SourceUrl="https://github.com/nielsbosma/SeoTools-for-Excel-Connectors/blob/master/GoogleTranslate.xml" HelpUrl="http://seotoolsforexcel.com/google-translate/" HelpText="Documentation">

  <Author Name="Victor" Url="http://community.seotoolsforexcel.com/users/diskborste/activity"/>

  <Settings HelpText="What's this?" HelpUrl="http://seotoolsforexcel.com/google-translate/">
    <Text Id="APIKey" Title="API Key Id" Required="true" HelpUrl="http://seotoolsforexcel.com/google-translate/"/>
  </Settings>

  <Resources>
    <Resource Id="HeaderMethods">
			<IntervalBetweenRequests RandomFrom="150" RandomTo="200" IfSame="Host"/>
			<RequestMethod>POST</RequestMethod>
			<RequestContentType>application/json; charset=utf-8</RequestContentType>
    </Resource>
    <Resource Id="Fail">
			<Fail>
				<JsonPath Expr="error.message"/>
			</Fail>
    </Resource>
  </Resources>

  <RestConnector Id="Languages" Hidden="true" HelpUrl="https://cloud.google.com/translate/docs/reference/languages">
    <Fetch>
      <Fetch.Url>
        <![CDATA[
        https://translation.googleapis.com/language/translate/v2/languages?key=@(Model.APIKey)
        ]]>
      </Fetch.Url>
      <HttpSettings>
        <Resource Id="HeaderMethods"/>
        <RequestBody>
					<![CDATA[
						@{
							var dict = new Dictionary<string, string>();
							dict.Add("target", "en");
							var output = Newtonsoft.Json.JsonConvert.SerializeObject(dict);
						}
						@output
					]]>
				</RequestBody>
      </HttpSettings>
    </Fetch>
    <Parse>
      <JsonPath Expr="$.data.languages[*]">
        <JsonPath Expr="language" Id="Language" Title="Language Code"/>
        <JsonPath Expr="name" Id="Name" Title="Language"/>
      </JsonPath>
    </Parse>
    <Resource Id="Fail"/>
  </RestConnector>

  <RestConnector Id="Detect" Title="Detect" HelpUrl="https://cloud.google.com/translate/docs/reference/detect">
    <Parameters>
      <Text Id="Text" Debug.DefaultValue="Ich würde wirklich gern Ihr Auto" Required="true" HelpText="Enter one or more Texts separated by a new line"/>
    </Parameters>
    <Fetch>
      <Fetch.Url>
        <![CDATA[
        https://translation.googleapis.com/language/translate/v2/detect?key=@(Model.APIKey)
        ]]>
      </Fetch.Url>
      <HttpSettings>
				<Resource Id="HeaderMethods"/>
        <RequestBody>
					<![CDATA[
					{"q" : "@(FormatData())"}
					]]>
				</RequestBody>
      </HttpSettings>
    </Fetch>
    <Parse>
      <JsonPath Expr="$.data.detections[*][0]">
				<Compute Expr="@GetLanguage()" Id="Language" Converter="Auto">
					<JsonPath Expr="language" Id="Inp" DefaultValue=""/>
				</Compute>
        <JsonPath Expr="confidence" Id="Confidence" Converter="Double"/>
				<JsonPath Expr="language" Id="LanguageShort" Title="Lang Shortcode" Converter="String" Checked="false"/>
      </JsonPath>
    </Parse>
    <Resource Id="Fail"/>
  </RestConnector>

  <RestConnector Id="Translate" Title="Translate" HelpUrl="https://cloud.google.com/translate/docs/reference/translate">
    <Parameters>
      <Text Id="Text" Title="Text" Debug.DefaultValue="&quot;Trafikverket och NCC har hävt avtalet i samförstånd.…" Required="true" HelpText="Enter one or more Texts separated by a new line"/>
			<Text Id="Target" Title="Target" Debug.DefaultValue="en" Required="true" Select.Connector="Languages" Select.IdField="Language"/>
			<Text Id="Source" Title="Source (Optional)" HelpText="Returns 'Detected Language' if omitted" Select.Connector="Languages"/>
			<Checkbox Id="HtmlFormat" Title="HTML Format"/>
    </Parameters>
    <Fetch>
      <Fetch.Url>
        <![CDATA[
        https://translation.googleapis.com/language/translate/v2?key=@(Model.APIKey)&target=@(Model.Target)
				@(!string.IsNullOrEmpty(Model.Source) ? "&source=" + Model.Source : "")
				&format=@(Model.HtmlFormat ? "html" : "text")
        ]]>
      </Fetch.Url>
      <HttpSettings>
        <Resource Id="HeaderMethods"/>
        <RequestBody>
					<![CDATA[
					{"q" : "@(FormatData())"}
					]]>
				</RequestBody>
      </HttpSettings>
    </Fetch>
    <Parse>
      <JsonPath Expr="$.data.translations[*]">
        <Compute Expr="@Utils.HtmlDecode(Model.Inp)" Id="Result" Converter="String" DefaultValue="">
					<JsonPath Expr="translatedText" Id="Inp" DefaultValue=""/>
        </Compute>
				<Compute Expr="@GetLanguage()" Id="Language" Converter="Auto">
					<JsonPath Expr="detectedSourceLanguage" Id="Inp" DefaultValue=""/>
				</Compute>
				<JsonPath Expr="detectedSourceLanguage" Id="DetectedLanguageShort" Title="Detected Lang Shortcode" Checked="false"/>
      </JsonPath>
    </Parse>
    <Resource Id="Fail"/>
  </RestConnector>

  <RazorFunctions>
    <![CDATA[
			string FormatData(){
				string temp1 = Regex.Replace(Model.Text, "\"", "\\\"");
				return  Utils.StripTags(temp1);
			}
			string GetLanguage() {
				string LangName = Utils.IsoLanguageCodeToName(Model.Inp);
				return !string.IsNullOrEmpty(LangName) ? LangName : Model.Inp;
			}
    ]]>
  </RazorFunctions>

</Suite>