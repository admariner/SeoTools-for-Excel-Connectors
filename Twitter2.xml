<?xml version="1.0" encoding="utf-8" ?>
<Suite Title="Twitter v2" Id="Twitter2" Category="Social" RequireVersion="9.5.7" LoginButton="https://seotoolsforexcel.com/logins/twitter.png" SourceUrl="https://github.com/nielsbosma/SeoTools-for-Excel-Connectors/blob/master/Twitter2.xml" HelpUrl="http://seotoolsforexcel.com/twitter2/" HelpText="Documentation">

  <Author Name="Victor Sandberg" Url="http://community.seotoolsforexcel.com/users/diskborste/activity" />

  <SeoToolsAuthenticator StayAuthenticated="true" Key="twitter"/>

  <Resources>
    <Resource Id="HttpSettings">
      <HttpSettings>
        <OAuth>
          <ConsumerKey>@Model.OAuthConsumerKey</ConsumerKey>
          <ConsumerSecret>@Model.OAuthConsumerSecret</ConsumerSecret>
          <Token>@Model.OAuthToken</Token>
          <TokenSecret>@Model.OAuthTokenSecret</TokenSecret>
        </OAuth>
      </HttpSettings>
		</Resource>
    <Resource Id="Fail">
		  <Fail>
				<!--<Regex Expr="!DOCTYPE" Group="0" Fail.If="IsNotEmpty" Fail.Action="Message" Fail.Message="Bad request"/>-->
				<Regex Expr="!DOCTYPE" Group="0" Fail.If="IsNotEmpty" Fail.Action="EmptyResult"/>
				<JsonPath Expr="errors.detail" Fail.If="IsEqual" Fail.ComparedTo="Invalid Request"/>
				<JsonPath Expr="title" Fail.If="IsEqual" Fail.ComparedTo="Invalid Request"/>
				<JsonPath Expr="errors.detail" Fail.If="IsEqual" Fail.ComparedTo="General Problem"/>
				<JsonPath Expr="errors[0].title" Fail.If="IsEqual" Fail.ComparedTo="General Problem"/>
				<JsonPath Expr="errors.detail" Fail.If="IsEqual" Fail.ComparedTo="Client Forbidden"/>
				<JsonPath Expr="errors[0].title" Fail.If="IsEqual" Fail.ComparedTo="Client Forbidden"/>
			</Fail>
		</Resource>
		<Resource Id="Paging">
			<Paging PageSize="100" EvenPages="false">
				<Parse>
					<JsonPath Expr="$.meta.next_token" Id="NextResults"/>
				</Parse>
			</Paging>
		</Resource>
    <Resource Id="Tweet">
			<Compute Expr="https://www.twitter.com/@(Model.Username)/statuses/@(Model.Id)" Id="Url" Title="URL" Tag="user.username">
				<JsonPath Expr="$.includes.users[?(@@.id=='@(Model.UserIdCache)')].username" Id="Username" ParseParent="true"/>
				<JsonPath Expr="id" Id="Id"/>
			</Compute>
			<JsonPath Expr="id" Id="Id"/>
			<JsonPath Expr="created_at" Id="CreatedAt" Title="Date" Tag="tweet.created_at" Converter="DateTime"/>
			<JsonPath Expr="text" Id="Text" Converter="String" Tag="tweet.text" DefaultValue=""/>
			<Compute Id="Type" Tag="tweet.text">
				<Compute.Expr>
					<![CDATA[
						@GetTweetType(Model.Txt)
					]]>
				</Compute.Expr>
				<JsonPath Expr="text" Id="Txt" DefaultValue=""/>
			</Compute>
			<Compute Id="Retweets" Tag="tweet.public_metrics" Converter="Auto">
				<Compute.Expr>
					<![CDATA[
						@(!Model.IncludeRtEng && GetTweetType(Model.Txt) == "Retweet" ? 0 : Model.Inp)
					]]>
				</Compute.Expr>
				<JsonPath Expr="text" Id="Txt" DefaultValue=""/>
				<JsonPath Expr="public_metrics.retweet_count" Id="Inp"/>
			</Compute>
			<JsonPath Expr="public_metrics.like_count" Id="Likes" Tag="tweet.public_metrics" Converter="Int"/>
			<JsonPath Expr="public_metrics.reply_count" Id="Replies" Tag="tweet.public_metrics" Converter="Int"/>
			<JsonPath Expr="public_metrics.quote_count" Id="Quotes" Tag="tweet.public_metrics" Converter="Int"/>
			<JsonPath Expr="public_metrics.impression_count" Id="Impressions" Tag="tweet.public_metrics" Converter="Int"/>			
			<JsonPath Expr="lang" Id="Language" Tag="tweet.lang" DefaultValue=""/>
			<JsonPath Expr="source" Id="Source" Tag="tweet.source" DefaultValue=""/>
			<JsonPath Expr="csv(entities.hashtags[*].tag)" Id="HashtagEntities" Title="Hashtag Entities" Tag="tweet.entities" Converter="Auto" DefaultValue=""/>
			<JsonPath Expr="csv(entities.urls[*].expanded_url)" Id="UrlEntities" Title="URL Entities" Tag="tweet.entities" DefaultValue=""/>
			<JsonPath Expr="csv(entities.mentions[*].username)" Id="MentionsEntities" Title="User Mentions Entities" Tag="tweet.entities" Converter="Auto" DefaultValue=""/>
			<JsonPath Expr="$.includes.media[?(@@.media_key=='@(Model.MediaIdCache)')].url" Id="ImageUrl" Title="Image URL" Tag="media.fields.preview_image_url,url" ParseParent="true" DefaultValue="" />
			<JsonPath Expr="context_annotations" Id="Annotations" Tag="tweet.context_annotations" DefaultValue=""/>
			<JsonPath Expr="reply_settings" Id="ReplySettings" Title="Reply Settings" Tag="tweet.reply_settings" DefaultValue=""/>
			<JsonPath Expr="conversation_id" Id="ConversationId" Title="Conversation Id" Tag="tweet.conversation_id" DefaultValue=""/>
			<JsonPath Expr="author_id" Id="UserId" Title="User Id" />
			<JsonPath Expr="$.includes.users[?(@@.id=='@(Model.UserIdCache)')].username" Id="Username" Tag="user.username" ParseParent="true"/>
			<Compute Expr="https://www.twitter.com/@Model.Username" Id="UserUrl" Title="User URL" Tag="user.username">
				<JsonPath Expr="$.includes.users[?(@@.id=='@(Model.UserIdCache)')].username" Id="Username" ParseParent="true"/>
			</Compute>
			<JsonPath Expr="$.includes.users[?(@@.id=='@(Model.UserIdCache)')].public_metrics.followers_count" Id="Followers" Tag="user.public_metrics" ParseParent="true" Converter="Int" />
			<JsonPath Expr="$.includes.users[?(@@.id=='@(Model.UserIdCache)')].name" Id="Name" Tag="user.name" ParseParent="true"/>
			<JsonPath Expr="$.includes.users[?(@@.id=='@(Model.UserIdCache)')].location" Id="Location" Tag="user.location" ParseParent="true" DefaultValue=""/>
			<JsonPath Expr="$.includes.users[?(@@.id=='@(Model.UserIdCache)')].description" Id="Bio" Tag="user.description" ParseParent="true" DefaultValue=""/>
			<JsonPath Expr="$.includes.users[?(@@.id=='@(Model.UserIdCache)')].public_metrics.following_count" Id="Follows" Tag="user.public_metrics" ParseParent="true" Converter="Int"/>
			<JsonPath Expr="$.includes.users[?(@@.id=='@(Model.UserIdCache)')].public_metrics.listed_count" Id="Lists" Tag="user.public_metrics" ParseParent="true" Converter="Int"/>
			<JsonPath Expr="$.includes.users[?(@@.id=='@(Model.UserIdCache)')].public_metrics.tweet_count" Id="Tweets" Tag="user.public_metrics" ParseParent="true" Converter="Int"/>
			<JsonPath Expr="$.includes.users[?(@@.id=='@(Model.UserIdCache)')].entities.url.urls[0].expanded_url" Id="Website" Tag="user.entities" ParseParent="true" DefaultValue=""/>
			<JsonPath Expr="$.includes.users[?(@@.id=='@(Model.UserIdCache)')].profile_image_url" Id="Avatar" Tag="user.profile_image_url" ParseParent="true"/>
			<JsonPath Expr="$.includes.users[?(@@.id=='@(Model.UserIdCache)')].verified" Id="Verified" Tag="user.verified" ParseParent="true"/>
		</Resource>
    <Resource Id="User">
			<Compute Expr="https://www.twitter.com/@(Model.Inp)/" Id="Url" Title="URL">
				<JsonPath Expr="username" Id="Inp" Tag="user.username" DefaultValue=""/>
			</Compute>
			<JsonPath Expr="id" Id="User.Id" Title="User Id" Tag="user.id" Converter="String"/>
			<JsonPath Expr="username" Id="Username" Tag="user.username"/>
			<JsonPath Expr="name" Id="Name" Tag="user.name"/>
			<JsonPath Expr="public_metrics.followers_count" Tag="user.public_metrics" Id="Followers" Converter="Int"/>
			<JsonPath Expr="public_metrics.following_count" Tag="user.public_metrics" Id="Following" Converter="Int"/>
			<JsonPath Expr="public_metrics.tweet_count" Tag="user.public_metrics" Id="Tweets" Converter="Int"/>
			<JsonPath Expr="public_metrics.listed_count" Tag="user.public_metrics" Id="Lists" Converter="Int"/>
			<JsonPath Expr="description" Id="Description" Tag="user.description" DefaultValue=""/>
			<JsonPath Expr="location" Id="Location" Tag="user.location" DefaultValue=""/>
			<JsonPath Expr="created_at" Id="Created" Tag="user.created_at" Converter="DateTime"/>
			<JsonPath Expr="entities.url.urls[0].expanded_url" Tag="user.entities" Id="Website" DefaultValue=""/>
			<Compute Expr="@Model.Inp.Replace(&quot;_normal&quot;,string.Empty)" Id="Avatar" Tag="user.profile_image_url">
				<JsonPath Expr="profile_image_url" Id="Inp" DefaultValue=""/>
			</Compute>
			<JsonPath Expr="verified" Id="Verified" Tag="user.verified" Converter="Bool"/>
		</Resource>
  </Resources>

  <RestConnector Id="TweetsLookup" Title="Tweets Lookup" Group="Tweets" HelpUrl="https://developer.twitter.com/en/docs/twitter-api/tweets/lookup/api-reference">
    <Parameters>
      <Text Id="Ids" Title="Tweet URLs or Ids (One per row)" Multiline="true" Debug.DefaultValue="1088844064236228608" Required="true"/>
			<Checkbox Id="IncludeRtEng" Title="Include Engagement from Retweets" DefaultValue="true" HelpText="If false, sets retweet count to 0 for all retweets"/>
    </Parameters>
    <Batch Parameter="Ids" Separator="\n" ItemsPerBatch="100"/>
    <Fetch>
			<Resource Id="HttpSettings"/>
      <Fetch.Url>
        <![CDATA[
				https://api.twitter.com/2/tweets?ids=@FetchTweetString()
				&expansions=author_id,entities.mentions.username,attachments.media_keys
				&tweet.fields=@(SelectedTweetFields())
				@SelectedMediaFields()
				@SelectedUserFields()
        ]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
			<JsonPath Expr="data[*]">
				<JsonPath Expr="author_id" Id="UserIdCache" CacheAndHide="true"/>
				<JsonPath Expr="attachments.media_keys[0]" Id="MediaIdCache" CacheAndHide="true"/>
				<Resource Id="Tweet"/>
			</JsonPath>
    </Parse>
    <Resource Id="Fail"/>
  </RestConnector>

  <RestConnector Id="TweetSearch" Title="Tweets Search" Group="Tweets" HelpUrl="https://developer.twitter.com/en/docs/twitter-api/tweets/search/api-reference/get-tweets-search-recent">
    <Parameters>
      <Text Id="Query" Title="Query" Required="true" Syntax="^.{1,512}$" Syntax.HelpText="Up to 512 characters" Debug.DefaultValue="obama" HelpUrl="https://dev.twitter.com/rest/public/search"/>
			<Checkbox Id="IncludeRtEng" Title="Include Engagement from Retweets" DefaultValue="true" HelpText="If false, sets retweet count to 0 for all retweets"/>
    </Parameters>
		<Resource Id="Paging"/>
    <Fetch>
			<Resource Id="HttpSettings"/>
      <Fetch.Url>
        <![CDATA[
        https://api.twitter.com/2/tweets/search/recent
				?query=@Utils.UrlEncode(Model.Query)
				&max_results=@GetValdPaginationCount()
        @(Model.PageCursor.Page != 0 ? "&next_token=" +  Model.NextResults : "")
				&expansions=author_id,entities.mentions.username,attachments.media_keys
				&tweet.fields=@SelectedTweetFields()
				@SelectedMediaFields()
				@SelectedUserFields()
				]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
			<JsonPath Expr="data[*]">
				<JsonPath Expr="author_id" Id="UserIdCache" CacheAndHide="true"/>
				<Resource Id="Tweet"/>
      </JsonPath>
    </Parse>
    <Resource Id="Fail"/>
  </RestConnector>

  <RestConnector Id="UserTweets" Title="Tweets from Users" Group="Tweets" HelpUrl="https://developer.twitter.com/en/docs/twitter-api/tweets/timelines/api-reference/get-users-id-tweets">
    <Parameters>
      <Text Id="Usernames" Title="Usernames" Debug.DefaultValue="justinbieber" Required="true" Multiline="true"/>
      <Checkbox Id="IncludeRts" Title="Include Retweets" DefaultValue="true"/>
      <Checkbox Id="IncludeReplies" Title="Include Replies" DefaultValue="true"/>
			<Checkbox Id="IncludeRtEng" Title="Include Engagement from Retweets" DefaultValue="true" HelpText="If false, sets retweets and likes count to 0 for all retweets"/>
    </Parameters>
    <Resource Id="Paging"/>
		<Prepare>
      <Connector Id="UsersLookupHidden" IgnoreBatches="true"/>
    </Prepare>
		<Batch Parameter="Usernames" Separator="\n"/>
    <Fetch>
      <Fetch.Url>
        <![CDATA[
        https://api.twitter.com/2/users/@(FetchUserIdFromUsername())/tweets
				?max_results=@GetValdPaginationCount()
        @(Model.PageCursor.Page != 0 ? "&pagination_token=" +  Model.NextResults : "")
				&expansions=author_id,entities.mentions.username,attachments.media_keys
				&tweet.fields=@SelectedTweetFields()
				@SelectedMediaFields()
				@SelectedUserFields()
        ]]>
      </Fetch.Url>
      <Resource Id="HttpSettings"/>
    </Fetch>
    <Parse>
			<JsonPath Expr="data[*]">
				<JsonPath Expr="author_id" Id="UserIdCache" CacheAndHide="true"/>
				<Resource Id="Tweet"/>
			</JsonPath>
    </Parse>
    <Resource Id="Fail"/>
  </RestConnector>

  <RestConnector Id="MentionsTweets" Title="Tweets Mentioning Users" Group="Tweets" HelpUrl="https://developer.twitter.com/en/docs/twitter-api/tweets/timelines/api-reference/get-users-id-mentions">
    <Parameters>
      <Text Id="Usernames" Title="Usernames" Debug.DefaultValue="justinbieber" Required="true" Multiline="true"/>
      <Checkbox Id="IncludeRts" Title="Include Retweets" DefaultValue="true"/>
      <Checkbox Id="IncludeReplies" Title="Include Replies" DefaultValue="true"/>
			<Checkbox Id="IncludeRtEng" Title="Include Engagement from Retweets" DefaultValue="true" HelpText="If false, sets retweets and likes count to 0 for all retweets"/>
    </Parameters>
    <Resource Id="Paging"/>
		<Prepare>
      <Connector Id="UsersLookupHidden" IgnoreBatches="true"/>
    </Prepare>
		<Batch Parameter="Usernames" Separator="\n"/>
    <Fetch>
      <Fetch.Url>
        <![CDATA[
        https://api.twitter.com/2/users/@(FetchUserIdFromUsername())/mentions
				?max_results=@GetValdPaginationCount()
        @(Model.PageCursor.Page != 0 ? "&pagination_token=" +  Model.NextResults : "")
				&expansions=author_id,entities.mentions.username,attachments.media_keys
				&tweet.fields=@SelectedTweetFields()
				@SelectedMediaFields()
				@SelectedUserFields()
        ]]>
      </Fetch.Url>
      <Resource Id="HttpSettings"/>
    </Fetch>
    <Parse>
			<JsonPath Expr="data[*]">
				<JsonPath Expr="author_id" Id="UserIdCache" CacheAndHide="true"/>
				<Resource Id="Tweet"/>
			</JsonPath>
    </Parse>
    <Resource Id="Fail"/>
  </RestConnector>

  <RestConnector Id="UserFollowers" Title="User Followers" Group="Users" HelpUrl="https://developer.twitter.com/en/docs/twitter-api/users/follows/api-reference/get-users-id-followers">
    <Parameters>
      <Text Id="Usernames" Title="Username" Debug.DefaultValue="justinbieber" Required="true"/>
    </Parameters>
    <Resource Id="Paging"/>
		<Prepare>
      <Connector Id="UsersLookupHidden"/>
    </Prepare>
    <Fetch>
      <Fetch.Url>
        <![CDATA[
        https://api.twitter.com/2/users/@(FetchUserIdFromUsername())/followers
				?max_results=@GetValdPaginationCount()
        @(Model.PageCursor.Page != 0 ? "&pagination_token=" +  Model.NextResults : "")
				@SelectedUserFields()
        ]]>
      </Fetch.Url>
      <Resource Id="HttpSettings"/>
    </Fetch>
    <Parse>
			<JsonPath Expr="data[*]">
				<Resource Id="User"/>
      </JsonPath>
    </Parse>
    <Resource Id="Fail"/>
  </RestConnector>

  <RestConnector Id="UserFollowing" Title="User Following" Group="Users" HelpUrl="https://developer.twitter.com/en/docs/twitter-api/users/follows/api-reference/get-users-id-following">
    <Parameters>
      <Text Id="Usernames" Title="Username" Debug.DefaultValue="justinbieber" Required="true"/>
    </Parameters>
    <Resource Id="Paging"/>
		<Prepare>
      <Connector Id="UsersLookupHidden"/>
    </Prepare>
    <Fetch>
      <Fetch.Url>
        <![CDATA[
        https://api.twitter.com/2/users/@(FetchUserIdFromUsername())/following
				?max_results=@GetValdPaginationCount()
        @(Model.PageCursor.Page != 0 ? "&pagination_token=" +  Model.NextResults : "")
				@SelectedUserFields()
        ]]>
      </Fetch.Url>
      <Resource Id="HttpSettings"/>
    </Fetch>
    <Parse>
			<JsonPath Expr="data[*]">
				<Resource Id="User"/>
      </JsonPath>
    </Parse>
    <Resource Id="Fail"/>
  </RestConnector>

  <RestConnector Id="UsersLookupHidden" Hidden="true">
    <Parameters>
      <Text Id="Usernames" Debug.DefaultValue="zaralarsson" Multiline="true" Required="true"/>
    </Parameters>
    <Fetch>
			<Resource Id="HttpSettings"/>
      <Fetch.Url>
        <![CDATA[
        https://api.twitter.com/2/users/by?usernames=@FetchUserString()
        ]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
			<Compute Expr="@Model.FetchedResult.Body" Id="UserIds"/>
    </Parse>
    <Resource Id="Fail"/>
  </RestConnector>

  <RestConnector Id="UsersLookup" Title="Users Lookup" Group="Users" HelpUrl="https://developer.twitter.com/en/docs/twitter-api/users/lookup/api-reference/get-users-by">
    <Parameters>
      <Text Id="Usernames" Title="Usernames (One per row)" Debug.DefaultValue="zaralarsson" Multiline="true" Required="true"/>
    </Parameters>
    <Batch Parameter="Usernames" Separator="\n" ItemsPerBatch="100"/>
    <Fetch>
			<Resource Id="HttpSettings"/>
      <Fetch.Url>
        <![CDATA[
        https://api.twitter.com/2/users/by
				?usernames=@FetchUserString()
				@SelectedUserFields()
        ]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
			<JsonPath Expr="data[*]">
				<Resource Id="User"/>
      </JsonPath>
    </Parse>
    <Resource Id="Fail"/>
  </RestConnector>

  <RazorFunctions>
    <![CDATA[
		string SelectedUserFields() {
			string[] fields = ((string)Model.Fields).Split(',').Select(e => e.Trim().ToLower()).ToArray();
			string csv = string.Join(",",((ResultField[])Model.Headers)
				.Where(e => !string.IsNullOrEmpty(e.Tag) && fields.Contains(e.Identifier.ToLower()) && e.Tag.StartsWith("user."))
				.Select(e => e.Tag.Replace("user.",string.Empty)).Distinct().ToArray());
			return csv.Length > 0 ? "&user.fields=" + csv : string.Empty;
		}

		string SelectedTweetFields() {
			string[] defaults = new string[] { "author_id", "id" };
			string[] fields = ((string)Model.Fields).Split(',').Select(e => e.Trim().ToLower()).ToArray();
			string[] selected = ((ResultField[])Model.Headers)
				.Where(e => !string.IsNullOrEmpty(e.Tag) && fields.Contains(e.Identifier.ToLower()) && e.Tag.StartsWith("tweet."))
				.Select(e => e.Tag.Replace("tweet.",string.Empty)).Distinct().ToArray();

			string[] all = defaults.Concat(selected).ToArray();
			return string.Join(",",all);
		}

		string SelectedMediaFields() {
			string[] fields = ((string)Model.Fields).Split(',').Select(e => e.Trim().ToLower()).ToArray();
			string[] selected = ((ResultField[])Model.Headers)
				.Where(e => !string.IsNullOrEmpty(e.Tag) && fields.Contains(e.Identifier.ToLower()) && e.Tag.StartsWith("media.fields."))
				.Select(e => e.Tag.Replace("media.fields.",string.Empty)).Distinct().ToArray();

			string csv = string.Join(",",selected);
			return csv.Length > 0 ? "&media.fields=" + csv : string.Empty;
		}

    string FetchUserString() {
			string[] lines = ((string)Model.Usernames).Trim().Split('\n').Select(e => e.Trim()).Where(e => !string.IsNullOrEmpty(e)).ToArray();
      return string.Join(",",lines.Select(e => Regex.Replace(e, @"^@", string.Empty)).ToArray());
    }

    string FetchTweetString() {
			string[] lines = ((string)Model.Ids).Trim().Split('\n').Select(e => e.Trim()).Where(e => !string.IsNullOrEmpty(e)).ToArray();
      return string.Join(",",lines.Select(e => Regex.Replace(e, @"(\w*)\/status", string.Empty)).Select((e, i) => Regex.Replace(e, @"[^\d]", string.Empty)).ToArray());
    }

		string GetTweetType(string txt) {
			if(txt.StartsWith("RT @"))
			{
				return "Retweet";
			}
			if(txt.StartsWith("@"))
			{
				return "Reply";
			}
			return "Tweet";
		}

		string FetchUserIdFromUsername() {
			JObject obj = JObject.Parse(Model.UserIds);
			var users = obj["data"];

			foreach (JToken user in users)
			{
				if(user["username"].ToString().ToLower() == Model.Usernames.ToLower())
				{
					return user["id"].ToString();
					break;
				}
			}
			return string.Empty;
		}

		int GetValdPaginationCount() {
			return Model.PageCursor.NextTake >= 5 ? Model.PageCursor.NextTake : 5;
		}
    ]]>
  </RazorFunctions>

</Suite>