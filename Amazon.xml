<?xml version="1.0" encoding="utf-8" ?>
<Suite Title="Amazon" Id="Amazon" Category="Products &amp; Review Sites" RequireVersion="8.4" SourceUrl="https://github.com/nielsbosma/SeoTools-for-Excel-Connectors/blob/master/Amazon.xml" HelpUrl="http://seotoolsforexcel.com/amazon/" HelpText="Documentation">

  <Author Name="Victor" Url="http://community.seotoolsforexcel.com/users/diskborste/activity"/>

  <Settings>
		<Select Id="PrefDomain" Title="Default Amazon Domain" DefaultValue="https://amazon.com">
      <Resource Id="Domains"/>
    </Select>
  </Settings>

  <Resources>
		<Resource Id="HttpSettings">
      <HttpSettings>
        <IntervalBetweenRequests RandomFrom="@(Model.Delay)" RandomTo="@(Model.Delay+10)" IfSame="Host"/>
				<RequestHeaders>
					<Header Name='Upgrade-Insecure-Requests'>1</Header>
					<Header Name='user-agent'>Mozilla\/5.0 (Macintosh; Intel Mac OS X 10.15; rv:71.0) Gecko/20100101 Firefox/71.0</Header>
				</RequestHeaders>
      </HttpSettings>
		</Resource>
    <Resource Id="Domains">
			<DataSource>
				<Item Id="https://amazon.com.br" Title="Brazil (amazon.com.br)"/>
				<Item Id="https://amazon.ca" Title="Canada (amazon.ca)"/>
				<Item Id="https://amazon.com.mx" Title="Mexico (amazon.com.mx)"/>
				<Item Id="https://amazon.com" Title="United States (amazon.com)"/>
				<Item Id="https://amazon.cn" Title="China (amazon.cn)"/>
				<Item Id="https://amazon.in" Title="India (amazon.in)"/>
				<Item Id="https://amazon.co.jp" Title="Japan (amazon.co.jp)"/>
				<Item Id="https://amazon.sg" Title="Singapore (amazon.sg)"/>
				<Item Id="https://amazon.com.tr" Title="Turkey (amazon.com.tr)"/>
				<Item Id="https://amazon.ae" Title="United Arab Emirates (amazon.ae)"/>
				<Item Id="https://amazon.fr" Title="France (amazon.fr)"/>
				<Item Id="https://amazon.de" Title="Germany (amazon.de)"/>
				<Item Id="https://amazon.it" Title="Italy (amazon.it)"/>
				<Item Id="https://amazon.nl" Title="Netherlands (amazon.nl)"/>
				<Item Id="https://amazon.es" Title="Spain (amazon.es)"/>
				<Item Id="https://amazon.co.uk" Title="United Kingdom (amazon.co.uk)"/>
				<Item Id="https://amazon.com.au" Title="Australia (amazon.com.au)"/>
			</DataSource>
    </Resource>
    <Resource Id="Sortings">
      <Item Id="relevanceblender" Title="Relevance"/>
      <Item Id="price-asc-rank" Title="Price: Low to High"/>
      <Item Id="price-desc-rank" Title="Price: High to Low"/>
      <Item Id="review-rank" Title="Avg. Customer Review"/>
      <Item Id="date-desc-rank" Title="Newest Arrivals"/>
    </Resource>
    <Resource Id="ReviewSortings">
      <Item Id="helpful" Title="Helpful"/>
      <Item Id="recent" Title="Recent"/>
    </Resource>
    <Resource Id="ReviewRatings">
      <Item Id="all_stars" Title="All Stars"/>
      <Item Id="five_star" Title="5 Stars"/>
      <Item Id="four_star" Title="4 Stars"/>
      <Item Id="three_star" Title="3 Stars"/>
      <Item Id="two_star" Title="2 Stars"/>
      <Item Id="one_star" Title="1 Stars"/>
      <Item Id="positive" Title="All Positive"/>
      <Item Id="critical" Title="All Critical"/>
    </Resource>
    <Resource Id="Departments">
      <Item Id="aps" Title="All Departments"/>
      <Item Id="alexa-skills" Title="Alexa Skills"/>
      <Item Id="amazon-devices" Title="Amazon Devices"/>
      <Item Id="instant-video" Title="Amazon Video"/>
      <Item Id="warehouse-deals" Title="Amazon Warehouse Deals"/>
      <Item Id="appliances" Title="Appliances"/>
      <Item Id="mobile-apps" Title="Apps &amp; Games"/>
      <Item Id="arts-crafts" Title="Arts, Crafts &amp; Sewing"/>
      <Item Id="automotive" Title="Automotive Parts &amp; Accessories"/>
      <Item Id="baby-products" Title="Baby"/>
      <Item Id="beauty" Title="Beauty &amp; Personal Care"/>
      <Item Id="stripbooks" Title="Books"/>
      <Item Id="popular" Title="CDs &amp; Vinyl"/>
      <Item Id="mobile" Title="Cell Phones &amp; Accessories"/>
      <Item Id="fashion" Title="Fashion"/>
      <Item Id="fashion-womens" Title="Fashion - Women"/>
      <Item Id="fashion-mens" Title="Fashion - Men"/>
      <Item Id="fashion-girls" Title="Fashion - Girls"/>
      <Item Id="fashion-boys" Title="Fashion - Boys"/>
      <Item Id="fashion-baby" Title="Fashion - Baby"/>
      <Item Id="collectibles" Title="Collectibles &amp; Fine Art"/>
      <Item Id="computers" Title="Computers"/>
      <Item Id="courses" Title="Courses"/>
      <Item Id="financial" Title="Credit and Payment Cards"/>
      <Item Id="digital-music" Title="Digital Music"/>
      <Item Id="electronics" Title="Electronics"/>
      <Item Id="lawngarden" Title="Garden &amp; Outdoor"/>
      <Item Id="gift-cards" Title="Gift Cards"/>
      <Item Id="grocery" Title="Grocery &amp; Gourmet Food"/>
      <Item Id="handmade" Title="Handmade"/>
      <Item Id="hpc" Title="Health Household &amp; Baby Care"/>
      <Item Id="local-services" Title="Home &amp; Business Services"/>
      <Item Id="garden" Title="Home &amp; Kitchen"/>
      <Item Id="industrial" Title="Industrial &amp; Scientific"/>
      <Item Id="digital-text" Title="Kindle Store"/>
      <Item Id="fashion-luggage" Title="Luggage &amp; Travel Gear"/>
      <Item Id="luxury-beauty" Title="Luxury Beauty"/>
      <Item Id="magazines" Title="Magazine Subscriptions"/>
      <Item Id="movies-tv" Title="Movies &amp; TV"/>
      <Item Id="mi" Title="Musical Instruments"/>
      <Item Id="office-products" Title="Office Products"/>
      <Item Id="pets" Title="Pet Supplies"/>
      <Item Id="prime-exclusive" Title="Prime Exclusive Savings"/>
      <Item Id="pantry" Title="Prime Pantry"/>
      <Item Id="software" Title="Software"/>
      <Item Id="sporting" Title="Sports &amp; Outdoors"/>
      <Item Id="tools" Title="Tools &amp; Home Improvement"/>
      <Item Id="toys-and-games" Title="Toys &amp; Games"/>
      <Item Id="vehicles" Title="Vehicles"/>
      <Item Id="videogames" Title="Video Games"/>
    </Resource>
  </Resources>

  <RestConnector Id="Search" Title="Search">
    <Parameters>
      <Text Id="Query" Title="Query" Debug.DefaultValue="gopro" Required="true"/>
			<Select Id="Domain" DefaultSettings="PrefDomain">
				<Resource Id="Domains"/>
			</Select>
      <Select Id="Department" Title="Department" Required="false" DefaultValue="aps">
        <DataSource>
          <Resource Id="Departments"/>
        </DataSource>
      </Select>
      <Select Id="Sort" Title="Sort Results by" Required="false" DefaultValue="relevanceblender">
        <DataSource>
          <Resource Id="Sortings"/>
        </DataSource>
      </Select>
      <Number Id="Delay" Title="Delay" DefaultValue="0" Minimum="0" Maximum="20000" Required="false"/>
    </Parameters>
    <Paging PageSize="15" EvenPages="false"/>
    <Fetch>
			<Resource Id="HttpSettings"/>
      <Fetch.Url>
        <![CDATA[
        @(Model.Domain)/s?
        url=search-alias=@(Model.Department)
        &field-keywords=@(Utils.UrlEncode(Model.Query))
        &page=@(Model.PageCursor.Page+1)
        &sort=@(Model.Sort)
        ]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
      <XPath Expr="//div[contains(@@data-asin, 'B')][not(@@class='asinImage')][not(a)]">
				<Compute Expr="@(Model.Domain)/dp/@(Model.Inp)" Id="Url" Title="URL">
					<XPath Expr="." Id="Inp" Attribute="data-asin"/>
        </Compute>
				<XPath Expr=".//a[@@class='a-link-normal a-text-normal']" Id="Title" Title="Title" DefaultValue=""/>
        <XPath Expr="." Id="Asin" Title="ASIN" Attribute="data-asin"/>
        <XPath Expr=".//span[@@class='a-price'][1]/span[1]" Id="LowestPrice" Title="Lowest Price" Converter="Auto" DefaultValue=""/>
        <XPath Expr=".//a[contains(@@href,'customerReviews')]" Id="Reviews" Title="Reviews" Converter="Int" DefaultValue="0"/>
        <Compute Id="AverageReview" Title="Average Score" Converter="Double" DefaultValue="0">
          <Compute.Expr>
					<![CDATA[
					@{
						string output = "0";
						Regex regex = new Regex(@"^(\d[\.\,]\d+)\s");

						if(regex.IsMatch(Model.Inp))
						{
							Match match = regex.Match(Model.Inp);
							output = match.Groups[1].Value;
						}
					}
					@output
					]]>
          </Compute.Expr>
          <XPath Id="Inp" Expr=".//i[contains(@@class,'a-icon a-icon-star')]" Converter="String" DefaultValue=""/>
        </Compute>
				<Compute Id="Offers" Title="Offers" Converter="Auto" DefaultValue="">
          <Compute.Expr>
            <![CDATA[
						@Regex.Replace(Model.Inp, @"[^0-9]+", "")
            ]]>
          </Compute.Expr>
					<XPath Expr=".//a[contains(@@href,'offer-listing')]/text()" Id="Inp" DefaultValue=""/>
        </Compute>
        <XPath Expr=".//img[contains(@@src,'media-amazon')]" Attribute="src" Id="Thumbnail" Title="Thumbnail" DefaultValue=""/>
      </XPath>
    </Parse>
  </RestConnector>

  <RestConnector Id="Reviews" Title="ASIN Reviews">
    <Parameters>
      <Text Id="ASIN" Title="ASIN(s)" Debug.DefaultValue="0451167716" Required="true" Multiline="true"/>
			<Select Id="Domain" DefaultSettings="PrefDomain">
				<Resource Id="Domains"/>
			</Select>
      <Select Id="Rating" Title="Filter by Ratings" Required="false" DefaultValue="all_stars">
        <DataSource>
          <Resource Id="ReviewRatings"/>
        </DataSource>
      </Select>
      <Select Id="Sort" Title="Sort Reviews by" Required="false" DefaultValue="helpful">
        <DataSource>
          <Resource Id="ReviewSortings"/>
        </DataSource>
      </Select>
      <Number Id="Delay" Title="Delay" DefaultValue="0" Minimum="0" Maximum="20000" Required="false"/>
    </Parameters>
    <Paging PageSize="10" EvenPages="false"/>
    <Batch Parameter="ASIN" Separator="\n"/>
    <Fetch>
			<Resource Id="HttpSettings"/>
      <Fetch.Url>
        <![CDATA[
				@(Model.Domain)/dp/product-reviews/@(Model.ASIN)
				?pageNumber=@(Model.PageCursor.Page+1)
				&sortBy=@(Model.Sort)
				&filterByStar=@(Model.Rating)
        ]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
      <XPath Expr="//div[contains(@@id,'customer_review')]">
        <XPath Expr=".//a[@@data-hook='review-title']" Id="Title" Title="Title" DefaultValue=""/>
        <XPath Expr=".//span[@@data-hook='review-body']" Id="Body" Title="Body" DefaultValue=""/>
        <Compute Id="AverageReview" Title="Average Score" Converter="Double" DefaultValue="0">
          <Compute.Expr>
					<![CDATA[
					@{
						string output = "0";
						Regex regex = new Regex(@"^(\d[\.\,]\d+)\s");

						if(regex.IsMatch(Model.Inp))
						{
							Match match = regex.Match(Model.Inp);
							output = match.Groups[1].Value;
						}
					}
					@output
					]]>
          </Compute.Expr>
          <XPath Id="Inp" Expr=".//i[contains(@@class,'a-icon a-icon-star')]" Converter="String" DefaultValue=""/>
        </Compute>
        <Compute Id="Helpfuls" Title="Helpfuls" Converter="Auto">
          <Compute.Expr>
            <![CDATA[
            @{
							int helpfuls = 0;
							Regex regex = new Regex(@"^(\w+)\s");
							Match match = regex.Match(Model.Inp);
							Regex regex2 = new Regex(@"^(\d+)\s");

							if(match.Groups[1].Value == "One")
									helpfuls = 1;
							else if(regex2.IsMatch(Model.Inp))
									helpfuls = Convert.ToInt32(match.Groups[1].Value);
            }
            @helpfuls
            ]]>
          </Compute.Expr>
          <XPath Expr=".//span[@@data-hook='helpful-vote-statement']" Id="Inp" DefaultValue=""/>
        </Compute>
        <XPath Expr=".//span[@@data-hook='review-date']" Id="Date" Title="Date" DefaultValue=""/>
        <XPath Expr=".//span[@@class='a-profile-name']" Id="Author" Title="Author" DefaultValue=""/>
        <XPath Expr=".//span[@@data-hook='avp-badge']" Id="Verified" Title="Verified" DefaultValue=""/>
        <Compute Expr="@Model.ASIN" Id="Input" Title="Input ASIN" Checked="false"/>
      </XPath>
    </Parse>
  </RestConnector>

	<RestConnector Id="ASINLookup" Title="ASIN Lookup">
    <Parameters>
      <Text Id="ASIN" Title="ASIN(s)" Debug.DefaultValue="0451167716" Required="true"/>
			<Select Id="Domain" DefaultSettings="PrefDomain">
				<Resource Id="Domains"/>
			</Select>
      <Number Id="Delay" Title="Delay" DefaultValue="0" Minimum="0" Maximum="20000" Required="false"/>
    </Parameters>
    <Fetch>
			<Resource Id="HttpSettings"/>
      <Fetch.Url>
        <![CDATA[
				@(Model.Domain)/dp/@(Model.ASIN)
        ]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
			<Compute Expr="@(Model.Domain)/dp/@(Model.ASIN)" Id="Url" Title="URL"/>
      <XPath Expr="//span[@@id='productTitle']" Id="Title" Title="Title" DefaultValue=""/>
			<Compute Id="Reviews" Title="Reviews" Converter="Int" DefaultValue="0">
				<Compute.Expr>
					<![CDATA[
						@Regex.Replace(Model.Inp,@"[^0-9]+","")
					]]>
				</Compute.Expr>
				<XPath Expr="//span[@@id='acrCustomerReviewText']" Id="Inp" DefaultValue="0"/>
			</Compute>
			<Compute Id="AverageReview" Title="Average Score" Converter="Double" DefaultValue="0">
				<Compute.Expr>
					<![CDATA[
					@{
						string output = "0";
						Regex regex = new Regex(@"^(\d[\.\,]\d+)\s");

						if(regex.IsMatch(Model.Inp))
						{
							Match match = regex.Match(Model.Inp);
							output = match.Groups[1].Value;
						}
					}
					@output
					]]>
				</Compute.Expr>
				<XPath Id="Inp" Expr="//i[contains(@@class,'a-icon a-icon-star')]" Converter="String" DefaultValue=""/>
			</Compute>
      <XPath Expr="//a[contains(@@href,'offer-listing')]/text()" Id="Offers" Title="Offers" Converter="Int" DefaultValue="0"/>
    </Parse>
  </RestConnector>

</Suite>